{
	"name": "ADF_Final_Activitey",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText21",
						"type": "DatasetReference"
					},
					"name": "Salesdata"
				},
				{
					"dataset": {
						"referenceName": "DelimitedText22",
						"type": "DatasetReference"
					},
					"name": "Type"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText27",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "join1",
					"description": "Inner join on 'Sales data' and 'Type'"
				},
				{
					"name": "select1"
				},
				{
					"name": "AddingColumn"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "cast1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          InvoiceNumber as string,",
				"          Date as string,",
				"          Type as string,",
				"          Period as date,",
				"          DueDate as date,",
				"          InvoiceDate as date,",
				"          FromDate as date,",
				"          ToDate as date,",
				"          NetAmount as double,",
				"          VatAmount as double,",
				"          grossValue as short",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Salesdata",
				"source(output(",
				"          SKTransType as integer,",
				"          BKTransType as string,",
				"          TransDesc as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Type",
				"derivedColumn1, Type join(Type == BKTransType,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"cast1 select(mapColumn(",
				"          InvoiceNumber,",
				"          Date,",
				"          Type,",
				"          Period,",
				"          DueDate,",
				"          InvoiceDate,",
				"          FromDate,",
				"          ToDate,",
				"          NetAmount,",
				"          VatAmount,",
				"          grossValue,",
				"          SKTransType,",
				"          TransDesc",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(SKdate = toString(Date, 'ddMMyyyy'),",
				"          CharecontrolNumber = concat(Type, '-', InvoiceNumber),",
				"          AmountPaidReceived = round(add(NetAmount,VatAmount)*grossValue,3),",
				"          AsOfDate = currentDate('dd-mm-yyyy')) ~> AddingColumn",
				"Salesdata derive(Date = concat(\r",
				"    substring(Date, 9, 2), '-',  \r",
				"    substring(Date, 6, 2), '-', \r",
				"    substring(Date, 1, 4)        \r",
				")\r",
				") ~> derivedColumn1",
				"join1 cast(output(",
				"          Date as date 'dd-MM-yyyy'",
				"     ),",
				"     errors: true) ~> cast1",
				"AddingColumn sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}