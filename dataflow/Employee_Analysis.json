{
	"name": "Employee_Analysis",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedTextadvt",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "DelimitedTextadvt",
						"type": "DatasetReference"
					},
					"name": "source2"
				},
				{
					"dataset": {
						"referenceName": "DelimitedTextadvt",
						"type": "DatasetReference"
					},
					"name": "source3"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "join1"
				},
				{
					"name": "union1"
				},
				{
					"name": "select1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          BusinessEntityID as short,",
				"          NationalIDNumber as integer,",
				"          LoginID as string,",
				"          OrganizationNode as string,",
				"          OrganizationLevel as short,",
				"          JobTitle as string,",
				"          BirthDate as string,",
				"          MaritalStatus as string,",
				"          Gender as string,",
				"          HireDate as string,",
				"          SalariedFlag as boolean,",
				"          VacationHours as short,",
				"          SickLeaveHours as short,",
				"          CurrentFlag as boolean,",
				"          rowguid as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: true,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false) ~> source1",
				"source(output(",
				"          BusinessEntityID as short,",
				"          DepartmentID as short,",
				"          ShiftID as short,",
				"          StartDate as string,",
				"          EndDate as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source2",
				"source(output(",
				"          DepartmentID as short,",
				"          Name as string,",
				"          GroupName as string,",
				"          ModifiedDate as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source3",
				"source1, union1 join(source1@BusinessEntityID == union1@BusinessEntityID,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"source2, source3 union(byName: true)~> union1",
				"join1 select(mapColumn(",
				"          BusinessEntityID = source1@BusinessEntityID,",
				"          NationalIDNumber,",
				"          LoginID,",
				"          OrganizationNode,",
				"          OrganizationLevel,",
				"          JobTitle,",
				"          BirthDate,",
				"          MaritalStatus,",
				"          Gender,",
				"          HireDate,",
				"          SalariedFlag,",
				"          VacationHours,",
				"          SickLeaveHours,",
				"          CurrentFlag,",
				"          rowguid,",
				"          ModifiedDate = source1@ModifiedDate,",
				"          BusinessEntityID = union1@BusinessEntityID,",
				"          DepartmentID,",
				"          ShiftID,",
				"          StartDate,",
				"          EndDate,",
				"          ModifiedDate = union1@ModifiedDate,",
				"          Name,",
				"          GroupName",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1"
			]
		}
	}
}