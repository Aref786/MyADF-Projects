{
	"name": "LinkdinApiDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LinkdinApi",
						"type": "DatasetReference"
					},
					"name": "JsonArray"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "flattenTransform1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          data as (images as (url as string)[], num_appreciations as integer, num_comments as integer, num_empathy as integer, num_interests as integer, num_likes as integer, num_praises as integer, num_reposts as integer, post_url as string, posted as string, poster_linkedin_url as string, reshared as boolean, text as string, time as string, urn as string)[],",
				"          message as string,",
				"          paging as (count as integer, pagination_token as string, start as integer)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'arrayOfDocuments') ~> JsonArray",
				"JsonArray foldDown(unroll(data.images, data),",
				"     mapColumn(",
				"          url = data.images.url,",
				"          num_appreciations = data.num_appreciations,",
				"          num_comments = data.num_comments,",
				"          num_empathy = data.num_empathy,",
				"          num_interests = data.num_interests,",
				"          num_likes = data.num_likes,",
				"          num_praises = data.num_praises,",
				"          num_reposts = data.num_reposts,",
				"          post_url = data.post_url,",
				"          posted = data.posted,",
				"          poster_linkedin_url = data.poster_linkedin_url,",
				"          reshared = data.reshared,",
				"          text = data.text,",
				"          time = data.time,",
				"          urn = data.urn",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenTransform1"
			]
		}
	}
}