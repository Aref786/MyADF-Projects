{
	"name": "manishapi",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "RestResource1",
						"type": "DatasetReference"
					},
					"name": "source1",
					"description": "movieapi"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "movie_data_json",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flatten1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          body as (big_image as string, description as string, genre as string[], id as string, image as string, imdb_link as string, imdbid as string, rank as short, rating as double, thumbnail as string, title as string, year as short),",
				"          headers as [string,string]",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     limit: 100,",
				"     httpMethod: 'GET',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     paginationRules: ['supportRFC5988' -> 'true'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'documentPerLine']) ~> source1",
				"source1 foldDown(unroll(body.genre),",
				"     mapColumn(",
				"          genre = body.genre,",
				"          bigimage = body.big_image,",
				"          description = body.description,",
				"          id = body.id,",
				"          image = body.image,",
				"          title = body.title,",
				"          imdbid = body.imdbid",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> flatten1",
				"flatten1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}