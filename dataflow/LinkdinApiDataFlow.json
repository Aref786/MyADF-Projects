{
	"name": "LinkdinApiDataFlow",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "LinkdinApi",
						"type": "DatasetReference"
					},
					"name": "JsonArray"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText15",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "flattenTransform1"
				},
				{
					"name": "castDate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          data as (article_subtitle as string, article_title as string, images as (url as string)[], num_appreciations as short, num_comments as short, num_empathy as short, num_interests as short, num_likes as short, num_praises as short, num_reposts as short, post_url as string, posted as timestamp, poster_linkedin_url as string, reshared as boolean, resharer_comment as string, text as string, time as string, urn as long, video as (duration as integer, stream_url as string))[],",
				"          message as string,",
				"          paging as (count as short, pagination_token as string, start as boolean)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     documentForm: 'documentPerLine',",
				"     partitionBy('hash', 1)) ~> JsonArray",
				"JsonArray foldDown(unroll(data.images, data),",
				"     mapColumn(",
				"          article_subtitle = data.article_subtitle,",
				"          article_title = data.article_title,",
				"          url = data.images.url,",
				"          num_appreciations = data.num_appreciations,",
				"          num_comments = data.num_comments,",
				"          num_empathy = data.num_empathy,",
				"          num_interests = data.num_interests,",
				"          num_likes = data.num_likes,",
				"          num_praises = data.num_praises,",
				"          num_reposts = data.num_reposts,",
				"          post_url = data.post_url,",
				"          posted = data.posted,",
				"          poster_linkedin_url = data.poster_linkedin_url,",
				"          reshared = data.reshared,",
				"          resharer_comment = data.resharer_comment,",
				"          text = data.text,",
				"          time = data.time,",
				"          urn = data.urn,",
				"          video_duration = data.video.duration,",
				"          Video_stream_url = data.video.stream_url,",
				"          message",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false) ~> flattenTransform1",
				"flattenTransform1 cast(output(",
				"          article_subtitle as string",
				"     ),",
				"     errors: true) ~> castDate",
				"castDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}